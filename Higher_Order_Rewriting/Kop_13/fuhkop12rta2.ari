(format higher-order)
(sort list)
(sort nat)
(fun O nat)
(fun build (-> nat list))
(fun collapse (-> list nat))
(fun cons (-> (-> nat nat) list list))
(fun diff (-> nat nat nat))
(fun gcd (-> nat nat nat))
(fun min (-> nat nat nat))
(fun nil list)
(fun s (-> nat nat))
(rule (min X O) O)
(rule (min O Y) O)
(rule (min (s X) (s Y)) (s (min X Y)))
(rule (diff X O) X)
(rule (diff O Y) Y)
(rule (diff (s X) (s Y)) (diff X Y))
(rule (gcd (s X) O) (s X))
(rule (gcd O (s Y)) (s Y))
(rule (gcd (s X) (s Y)) (gcd (diff X Y) (s (min X Y))))
(rule (collapse nil) O)
(rule (collapse (cons F L)) (F (collapse L)))
(rule (build O) nil)
(rule (build (s X)) (cons (lambda ((y nat)) (gcd y X)) (build X)))
