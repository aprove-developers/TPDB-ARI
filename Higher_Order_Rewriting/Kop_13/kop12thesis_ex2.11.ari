(format higher-order)
(sort list)
(sort nat)
(fun cons (-> nat list list))
(fun emap (-> (-> nat nat) list list))
(fun nil list)
(fun twice (-> (-> nat nat) nat nat))
(rule (emap F nil) nil)
(rule (emap F (cons X L)) (cons (F X) (emap (lambda ((y nat)) (twice F y)) L)))
(rule (twice F X) (F (F X)))
