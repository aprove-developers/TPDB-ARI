(format higher-order)
(sort list)
(sort nat)
(fun O nat)
(fun app (-> list list list))
(fun cons (-> nat list list))
(fun head (-> list nat))
(fun hrepeat (-> nat (-> list list) list list))
(fun hshuffle (-> list list))
(fun nil list)
(fun reverse (-> list list))
(fun s (-> nat nat))
(fun shuffle (-> list list))
(fun tail (-> list list))
(fun uhalf (-> nat nat))
(rule (app nil l) l)
(rule (app (cons n l) y) (cons n (app l y)))
(rule (reverse nil) nil)
(rule (reverse (cons n l)) (app (reverse l) (cons n nil)))
(rule (shuffle nil) nil)
(rule (shuffle (cons n l)) (cons n (shuffle (reverse l))))
(rule (uhalf O) O)
(rule (uhalf (s O)) (s O))
(rule (uhalf (s (s n))) (s (uhalf n)))
(rule (hrepeat O F l) l)
(rule (hrepeat (s n) F l) (hrepeat (uhalf n) F (F l)))
(rule (tail (cons n l)) l)
(rule (head (cons n l)) n)
(rule (hshuffle l) (hrepeat (head l) (lambda ((z list)) (shuffle z)) (tail l)))
