(format higher-order)
(sort ArrNArrNN)
(sort ArrNN)
(sort N)
(fun get (-> (-> N ArrNN) ArrNN))
(fun handler (-> (-> N ArrNN) (-> ArrNArrNN ArrNN) (-> N ArrNN ArrNN) ArrNN ArrNN))
(fun lam (-> (-> N ArrNN) ArrNArrNN))
(fun put (-> N ArrNN ArrNN))
(fun return (-> N ArrNN))
(fun sub (-> (-> N ArrNN) N ArrNN))
(rule (get (lambda ((pX N)) (put pX X))) X)
(rule (get (lambda ((pY N)) (get (lambda ((pZ N)) (Z pZ pY))))) (get (lambda ((pU N)) (Z pU pU))))
(rule (put U (put V W)) (put V W))
(rule (put P (get F1)) (put P (sub F1 P)))
(rule (sub (lambda ((pF N)) (return pF)) Y1) (return Y1))
(rule (sub (lambda ((pG N)) U1) V1) U1)
(rule (sub (lambda ((pH N)) (get (lambda ((pI N)) (I1 pI pH)))) P1) (get (lambda ((pP N)) (sub (lambda ((pJ N)) (I1 pP pJ)) P1))))
(rule (sub (lambda ((pQ N)) (put X2 (Z2 pQ))) U2) (put X2 (sub (lambda ((pR N)) (Z2 pR)) U2)))
(rule (handler H2 I2 J2 (get F3)) (I2 (lam (lambda ((pUb N)) (handler H2 I2 J2 (F3 pUb))))))
(rule (handler Z3 G3 H3 (return W3)) (Z3 W3))
(rule (handler J3 F4 Z4 (put U4 V4)) (Z4 U4 (handler J3 F4 Z4 V4)))
