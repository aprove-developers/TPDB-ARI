(format higher-order)
(sort ArrNArrNN)
(sort ArrNN)
(sort CPairc1c2)
(sort N)
(sort Suma1a2)
(sort Uc)
(sort a1)
(sort a2)
(sort c)
(sort c1)
(sort c2)
(fun app (-> ArrNArrNN N ArrNN))
(fun bang (-> Uc c))
(fun case (-> Suma1a2 (-> a1 c) (-> a2 c) c))
(fun cpair (-> c1 c2 CPairc1c2))
(fun get (-> (-> N ArrNN) ArrNN))
(fun handler (-> (-> N ArrNN) (-> ArrNArrNN ArrNN) (-> N ArrNN ArrNN) ArrNN ArrNN))
(fun inj1 (-> a1 Suma1a2))
(fun inj2 (-> a2 Suma1a2))
(fun lam (-> (-> N ArrNN) ArrNArrNN))
(fun let (-> ArrNN (-> N c) c))
(fun prj1 (-> CPairc1c2 c1))
(fun prj2 (-> CPairc1c2 c2))
(fun put (-> N ArrNN ArrNN))
(fun return (-> N ArrNN))
(fun sub (-> (-> N ArrNN) N ArrNN))
(fun thunk (-> c Uc))
(rule (get (lambda ((pX N)) (put pX X))) X)
(rule (get (lambda ((pY N)) (get (lambda ((pZ N)) (Z pZ pY))))) (get (lambda ((pU N)) (Z pU pU))))
(rule (put U (put V W)) (put V W))
(rule (put P (get F1)) (put P (sub F1 P)))
(rule (sub (lambda ((pF N)) (return pF)) Y1) (return Y1))
(rule (sub (lambda ((pG N)) U1) V1) U1)
(rule (sub (lambda ((pH N)) (get (lambda ((pI N)) (I1 pI pH)))) P1) (get (lambda ((pP N)) (sub (lambda ((pJ N)) (I1 pP pJ)) P1))))
(rule (sub (lambda ((pQ N)) (put X2 (Z2 pQ))) U2) (put X2 (sub (lambda ((pR N)) (Z2 pR)) U2)))
(rule (app (lam H2) W2) (H2 W2))
(rule (bang (thunk P2)) P2)
(rule (prj1 (cpair X3 Y3)) X3)
(rule (prj2 (cpair U3 V3)) V3)
(rule (case (inj1 W3) J3 F4) (J3 W3))
(rule (case (inj2 Y4) G4 H4) (H4 Y4))
(rule (let (return W4) J4) (J4 W4))
(rule (handler F5 Z5 G5 (get H5)) (Z5 (lam (lambda ((pIb N)) (handler F5 Z5 G5 (H5 pIb))))))
(rule (handler I5 J5 F6 (return Y6)) (I5 Y6))
(rule (handler G6 H6 I6 (put P6 X7)) (I6 P6 (handler G6 H6 I6 X7)))
