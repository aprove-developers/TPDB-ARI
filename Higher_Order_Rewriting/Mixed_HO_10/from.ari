(format higher-order)
(sort B)
(sort N)
(sort list)
(fun chain (-> (-> N N) list list))
(fun cons (-> N list list))
(fun false B)
(fun from (-> N list list))
(fun if (-> B list list list))
(fun incch (-> list list))
(fun lteq (-> N N B))
(fun nil list)
(fun o N)
(fun s (-> N N))
(fun true B)
(rule (if true X Y) X)
(rule (if false X Y) Y)
(rule (lteq (s M) o) false)
(rule (lteq o M) true)
(rule (lteq (s M) (s K)) (lteq M K))
(rule (from M nil) nil)
(rule (from M (cons H Z)) (if (lteq M H) (cons H Z) (from M Z)))
(rule (chain F nil) nil)
(rule (chain F (cons H Z)) (cons (F H) (chain F (from (F H) Z))))
(rule (incch X) (chain (lambda ((x N)) (s x)) X))
