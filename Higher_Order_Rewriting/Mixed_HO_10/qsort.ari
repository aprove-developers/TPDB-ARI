(format higher-order)
(sort bool)
(sort list)
(sort nat)
(fun O nat)
(fun app (-> list list list))
(fun cons (-> nat list list))
(fun false bool)
(fun filter (-> (-> nat bool) list list))
(fun gr (-> nat nat bool))
(fun if (-> bool list list list))
(fun le (-> nat nat bool))
(fun nil list)
(fun qsort (-> list list))
(fun s (-> nat nat))
(fun true bool)
(rule (if true xs ys) xs)
(rule (if false xs ys) ys)
(rule (app nil xs) xs)
(rule (app (cons x xs) ys) (cons x (app xs ys)))
(rule (le O y) true)
(rule (le (s x) O) false)
(rule (le (s x) (s y)) (le x y))
(rule (gr O y) false)
(rule (gr (s x) O) true)
(rule (gr (s x) (s y)) (gr x y))
(rule (filter p nil) nil)
(rule (filter p (cons x xs)) (if (p x) (cons x (filter p xs)) (filter p xs)))
(rule (qsort nil) nil)
(rule (qsort (cons x xs)) (app (qsort (filter (lambda ((z nat)) (le z x)) xs)) (app (cons x nil) (qsort (filter (lambda ((z nat)) (gr z x)) xs)))))
