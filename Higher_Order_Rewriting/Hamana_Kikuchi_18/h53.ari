(format higher-order)
(sort a)
(sort alist)
(fun cons (-> a alist alist))
(fun foldl (-> (-> a a a) a alist a))
(fun nil alist)
(fun xap (-> (-> a a a) a a a))
(fun yap (-> (-> a a) a a))
(rule (foldl (lambda ((%X a) (%Y a)) (yap (xap F %X) %Y)) Y nil) Y)
(rule (foldl (lambda ((%Z a) (%U a)) (yap (xap G %Z) %U)) V (cons W P)) (foldl (lambda ((%V a) (%W a)) (yap (xap G %V) %W)) (yap (xap G V) W) P))
(rule (xap F1 Y1) (F1 Y1))
(rule (yap G1 V1) (G1 V1))
