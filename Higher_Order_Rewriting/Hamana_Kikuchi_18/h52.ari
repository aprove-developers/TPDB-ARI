(format higher-order)
(sort list)
(sort nat)
(fun O nat)
(fun cons (-> nat list list))
(fun foldl (-> (-> nat nat nat) nat list nat))
(fun nil list)
(fun plusc (-> nat nat nat))
(fun s (-> nat nat))
(fun sum (-> list nat))
(rule (foldl F Y nil) Y)
(rule (foldl G V (cons W P)) (foldl G (G V W) P))
(rule (plusc X1 O) X1)
(rule (plusc Y1 (s U1)) (s (plusc Y1 U1)))
(rule (sum V1) (foldl (lambda ((%G nat) (%F nat)) (plusc %G %F)) O V1))
