(format higher-order)
(sort list)
(sort nat)
(fun O nat)
(fun cons (-> nat list list))
(fun foldr (-> (-> nat nat nat) nat list nat))
(fun length (-> list nat))
(fun nil list)
(fun s (-> nat nat))
(fun succ (-> nat nat nat))
(fun xap (-> (-> nat nat nat) nat nat nat))
(fun yap (-> (-> nat nat) nat nat))
(rule (foldr (lambda ((x nat) (y nat)) (yap (xap F x) y)) Y nil) Y)
(rule (foldr (lambda ((x nat) (y nat)) (yap (xap G x) y)) V (cons W P)) (yap (xap G W) (foldr (lambda ((x nat) (y nat)) (yap (xap G x) y)) V P)))
(rule (succ X1 Y1) (s Y1))
(rule (length U1) (foldr (lambda ((x nat) (y nat)) (yap (xap succ x) y)) O U1))
(rule (xap H1 W1) (H1 W1))
(rule (yap J1 X2) (J1 X2))
