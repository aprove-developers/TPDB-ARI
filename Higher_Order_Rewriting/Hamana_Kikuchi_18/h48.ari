(format higher-order)
(sort nat)
(fun O nat)
(fun add (-> nat nat nat))
(fun rec (-> (-> nat nat nat) nat nat nat))
(fun s (-> nat nat))
(fun succ (-> nat nat nat))
(fun xap (-> (-> nat nat nat) nat nat nat))
(fun yap (-> (-> nat nat) nat nat))
(rule (rec (lambda ((%X nat) (%Y nat)) (yap (xap F %X) %Y)) Y O) Y)
(rule (rec (lambda ((%Z nat) (%U nat)) (yap (xap G %Z) %U)) V (s W)) (yap (xap G W) (rec (lambda ((%V nat) (%W nat)) (yap (xap G %V) %W)) V W)))
(rule (succ P X1) (s X1))
(rule (add Y1 U1) (rec (lambda ((%F nat) (%G nat)) (yap (xap succ %F) %G)) Y1 U1))
(rule (add V1 O) V1)
(rule (add W1 (s P1)) (s (add W1 P1)))
(rule (xap F2 Y2) (F2 Y2))
(rule (yap G2 V2) (G2 V2))
